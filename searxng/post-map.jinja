{#- vim: ft=jinja #}

{#-
    Convenience: Make relative paths absolute.
-#}

{%- set base_path = mapdata.lookup.paths.base %}
{%- for path, val in mapdata.lookup.paths.items() %}
  {%- if val and val is string and not val.startswith("/") %}
    {%- do mapdata.lookup.paths.update({path: base_path | path_join(val)}) %}
  {%- endif %}
{%- endfor %}

{%- if not mapdata.lookup.user.home %}
  {%- do mapdata.lookup.user.update({"home": base_path}) %}
{%- endif %}


{#-
    Automatically generate secrets if they were not specified.
-#}


{#- Since grains.get_or_set_hash was removed in v3005, cache generated secrets -#}
{%- set current_cached = {} -%}
{%- set cache_updated = [] -%}
{%- set cache_file = mapdata.lookup.paths.base | path_join(".saltcache.yml") -%}
{%- if salt["file.file_exists"](cache_file) -%}
  {%- do current_cached.update(salt["jinja.import_yaml"](cache_file)) -%}
{%- else -%}
  {%- do salt["file.mkdir"](mapdata.lookup.paths.base) -%}
{%- endif -%}

{%- for var, val in current_cached.items() -%}
  {%- do mapdata | set_dict_key_value(var, val) -%}
{%- endfor -%}

{%- for secret in [
      "config:server:secret_key",
    ] -%}
  {%- if not mapdata | traverse(secret) -%}
    {%- do current_cached.update({secret: salt["random.get_str"](64, punctuation=false, uppercase=false)}) -%}
    {%- do cache_updated.append(true) -%}
  {%- endif -%}
{%- endfor -%}

{%- if cache_updated -%}
  {%- for var, val in current_cached.items() -%}
    {%- do mapdata | set_dict_key_value(var, val) -%}
  {%- endfor -%}
  {%- do salt["file.write"](cache_file, salt["slsutil.serialize"]("yaml", current_cached)) -%}
  {%- do salt["file.set_mode"](cache_file, "0600") -%}
{%- endif -%}
